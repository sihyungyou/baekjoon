/*
문제 설명
N자리 이진수 중 1을 K개 포함하면서 3의 배수인 이진수는 모두 몇 개인지 구하려 합니다. 단, N자리 이진수는 0으로 시작하는 경우도 포함합니다.

예를 들어 N = 3, K = 2인 경우 3자리 이진수는 000, 001, 010, 011, 100, 101, 110, 111로 총 8개입니다. 이 중 1을 2개 포함하는 이진수는 011, 101, 110이며, 이 중 3의 배수인 이진수는 011, 110으로 총 2개입니다.

자릿수 N과 1의 개수 K가 주어질 때, N자리 이진수 중 1을 K개 포함하면서 3의 배수인 이진수는 모두 몇 개인지 구해주세요.

제한사항
입력 :

표준 입력을 사용해 데이터를 입력받으세요.
테스트 케이스 첫째 줄에 N과 K가 순서대로 주어집니다.
1 ≤ N ≤ 50, N은 자연수
1 ≤ K ≤ N, K는 자연수
출력 :

표준 출력을 사용해 정답을 출력해주세요.
N자리 이진수 중 1을 K개 포함하면서 3의 배수인 이진수는 모두 몇 개인지 출력해 주세요.
입출력 예
입력 #1

3 2
출력 #1

2
입력 #2

4 2
출력 #2

4
입력 #3

6 3
출력 #3

2
입출력 예 설명
입출력 예 #1

문제 설명과 같습니다.

입출력 예 #2

1이 2개 포함된 4자리 이진수 중 3의 배수인 이진수는 0011, 0110, 1001, 1100입니다.

입출력 예 #3

1이 3개 포함된 6자리 이진수 중 3의 배수인 이진수는 101010, 010101입니다.
*/

#include <cstdio>
#include <cmath>

using namespace std;
int n, k;

bool check(long long n) {
    int c = 0;
    while(n != 0) {
        if (n % 2 == 1) c++;
        n /= 2;
        if (c > k) break;
    }
    if (c == k) return true;
    else return false;
}

int main(void) {
    int cnt = 0;
    long long i, range;
    scanf("%d %d", &n, &k);
    range = exp2(n)-1;
    
    for (i = 3; i <= range; i+=3) {
        if (check(i)) cnt++;
    }

    printf("%d\n", cnt);
    return 0;
}